/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rubicon.menus;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

/**
 *
 * @author user
 */
public class NewGame extends javax.swing.JPanel {

    /**
     * Creates new form NewGame
     */
    String[] games;
    ActionListener acceptListener;
    public NewGame(ActionListener accept, ActionListener cancel) {
        initComponents();
        notAvailable.setVisible(false);
        acceptListener = accept;
        this.cancel.addActionListener(cancel);
        this.cancel.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                gameName.setText("");
            }
        });
    }
    
    public void refreshData(){
        games = new File("Game/playerdata").list();
        gameName.requestFocus();
    }
    
    public String getGameName(){
        return gameName.getText();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        gameName = new javax.swing.JTextField();
        accept = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        notAvailable = new javax.swing.JLabel();

        setOpaque(false);

        title.setFont(new java.awt.Font("Silom", 0, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("New Game");

        gameName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gameName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gameNameKeyTyped(evt);
            }
        });

        accept.setText("Accept");
        accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");

        notAvailable.setForeground(java.awt.Color.red);
        notAvailable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notAvailable.setText("Name Not Available");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(accept, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(gameName)
            .add(cancel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(title, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .add(notAvailable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(title)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(notAvailable)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(gameName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(accept)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cancel)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptActionPerformed
        for(String file:games){
            if(file.equals(gameName.getText())){
                notAvailable.setVisible(true);
                return;
            }
        }
        acceptListener.actionPerformed(evt);
        gameName.setText("");
    }//GEN-LAST:event_acceptActionPerformed

    private void gameNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gameNameKeyTyped
        notAvailable.setVisible(false);
    }//GEN-LAST:event_gameNameKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accept;
    private javax.swing.JButton cancel;
    private javax.swing.JTextField gameName;
    private javax.swing.JLabel notAvailable;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
