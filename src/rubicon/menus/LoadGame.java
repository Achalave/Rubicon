/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package rubicon.menus;

import rubicon.Data;
import java.awt.event.ActionListener;
import java.io.File;

/**
 *
 * @author user
 */
public class LoadGame extends javax.swing.JPanel {

    /**
     * Creates new form LoadGame
     */
    String[] games;
    Data[] data;
    int index;
    
    public LoadGame(ActionListener select,ActionListener cancel) {
        initComponents();
        this.select.addActionListener(select);
        this.cancel.addActionListener(cancel);
    }
    
    public void refreshData(){
        index = 0;
        data = null;
        int validFiles = 0;
        File f = new File("Game/playerdata");
        games = f.list();
        
        if(games != null && games.length > 0){
            //Check what is valid data
            data = new Data[games.length];
            for(int i=0; i<games.length; i++){
                data[i]=Data.loadData("Game/playerdata/"+games[i]);
                if(data[i] != null)
                    validFiles++;
            }
            //Make a list of only valid data and game names
            String[] tempN = new String[validFiles];
            Data[] tempD = new Data[validFiles];
            int index = 0;
            for(int i=0; i<validFiles; i++){
                while(data[index] == null){
                    index++;
                }
                tempN[i] = games[index];
                tempD[i] = data[index];
                index++;
            }
            games = tempN;
            data = tempD;
        }
        //Get all the names and set the buttons up
        if(games != null && games.length > 0){
            select.setEnabled(true);
            gameName.setText(games[0]);
            money.setText("Money: "+data[0].getMoney());
            back.setEnabled(false);
            if(games.length == 1)
                forward.setEnabled(false);
            else
                forward.setEnabled(true);
        }
        else{
            gameName.setText("No Saved Games");
            money.setText("----------------------------------------------------------");
            back.setEnabled(false);
            forward.setEnabled(false);
            select.setEnabled(false);
        }
    }
    
    public Data getSelectedData(){
        return data[index];
    }
    public String getGameName(){
        return gameName.getText();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameName = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        forward = new javax.swing.JButton();
        select = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        money = new javax.swing.JLabel();

        setOpaque(false);

        gameName.setFont(new java.awt.Font("Silom", 0, 36)); // NOI18N
        gameName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gameName.setText("Game");

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        forward.setText("Next");
        forward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardActionPerformed(evt);
            }
        });

        select.setText("Select");

        cancel.setText("Cancel");

        money.setFont(new java.awt.Font("Bangla MN", 0, 13)); // NOI18N
        money.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        money.setText("Money: 300");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(gameName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(back, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(select, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(cancel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(forward, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(money, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(gameName)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(money)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(back, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(forward, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(select, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        index--;
        if(index == 0)
            back.setEnabled(false);
        if(index < games.length-1)
            forward.setEnabled(true);
        gameName.setText(games[index]);
        money.setText("Money: "+data[index].getMoney());
    }//GEN-LAST:event_backActionPerformed

    private void forwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardActionPerformed
        index++;
        if(index == games.length-1)
            forward.setEnabled(false);
        if(index > 0)
            back.setEnabled(true);
        gameName.setText(games[index]);
        money.setText("Money: "+data[index].getMoney());
    }//GEN-LAST:event_forwardActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton cancel;
    private javax.swing.JButton forward;
    private javax.swing.JLabel gameName;
    private javax.swing.JLabel money;
    private javax.swing.JButton select;
    // End of variables declaration//GEN-END:variables
}
